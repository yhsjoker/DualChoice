-- Database dcdb

-- Academic Leader Table
CREATE TABLE AcademicLeader (
    ID INT PRIMARY KEY,
    Name VARCHAR(50),
    CollegeID INT,
    GraduateSecretaryID INT,
    FOREIGN KEY (CollegeID) REFERENCES College(ID),
    FOREIGN KEY (GraduateSecretaryID) REFERENCES GraduateSecretary(ID)
);

-- Mentor Table
CREATE TABLE Mentor (
    ID INT PRIMARY KEY,
    Name VARCHAR(50),
    Phone VARCHAR(20),
    Qualification VARCHAR(50),
    Image BLOB,
    Email VARCHAR(100),
    Title VARCHAR(50),
    Bio TEXT,
    AcademicQuota INT,
    ProfessionalQuota INT,
    DirectPhDQuota INT,
    VolunteerRound INT,
    AcademicLeaderID INT,
    FOREIGN KEY (AcademicLeaderID) REFERENCES AcademicLeader(ID)
);

-- Selection Table
CREATE TABLE Selection (
    MentorID INT,
    CandidateID INT,
    Type VARCHAR(50),
    Priority INT,
    FOREIGN KEY (MentorID) REFERENCES Mentor(ID),
    FOREIGN KEY (CandidateID) REFERENCES Candidate(ID)
);

-- Candidate Table
CREATE TABLE Candidate (
    ID INT PRIMARY KEY,
    Name VARCHAR(50),
    Phone VARCHAR(20),
    EmergencyPhone VARCHAR(20),
    Email VARCHAR(100),
    UndergradMajor VARCHAR(50),
    UndergradSchool VARCHAR(100),
    SourceLocation VARCHAR(50),
    UndergradType VARCHAR(50),
    Resume TEXT,
    BirthDate DATE,
    GraduationDate DATE,
    ExamID VARCHAR(20),
    IDCard VARCHAR(20),
    Category VARCHAR(50),
    VolunteerStatus VARCHAR(50),
    GraduateSecretaryID INT,
    InterviewGroupID INT,
    FOREIGN KEY (GraduateSecretaryID) REFERENCES GraduateSecretary(ID),
    FOREIGN KEY (InterviewGroupID) REFERENCES InterviewGroup(ID)
);

-- Exam Table
CREATE TABLE Exam (
    SubjectID INT,
    CandidateID INT,
    Category VARCHAR(50),
    Score DECIMAL(5, 2),
    FOREIGN KEY (SubjectID) REFERENCES Subject(ID),
    FOREIGN KEY (CandidateID) REFERENCES Candidate(ID)
);

-- Subject Table
CREATE TABLE Subject (
    ID INT PRIMARY KEY,
    Name VARCHAR(50),
    Category VARCHAR(50)
);

-- Assessment Table
CREATE TABLE Assessment (
    SubjectID INT,
    DisciplineID INT,
    Category VARCHAR(50),
    Score DECIMAL(5, 2),
    FOREIGN KEY (SubjectID) REFERENCES Subject(ID),
    FOREIGN KEY (DisciplineID) REFERENCES Discipline(ID)
);

-- Discipline Table
CREATE TABLE Discipline (
    ID INT PRIMARY KEY,
    Name VARCHAR(50),
    Type VARCHAR(50),
    Indicator VARCHAR(50),
    Overview TEXT,
    SuperiorDiscipline VARCHAR(50),
    Level VARCHAR(50),
    CollegeID INT,
    FOREIGN KEY (CollegeID) REFERENCES College(ID)
);

-- Application Table
CREATE TABLE Application (
    DisciplineID INT,
    CandidateID INT,
    Category VARCHAR(50),
    FOREIGN KEY (DisciplineID) REFERENCES Discipline(ID),
    FOREIGN KEY (CandidateID) REFERENCES Candidate(ID)
);

-- College Table
CREATE TABLE College (
    ID INT PRIMARY KEY,
    Name VARCHAR(50),
    Type VARCHAR(50),
    Website VARCHAR(100)
);

-- Graduate Secretary Table
CREATE TABLE GraduateSecretary (
    ID INT PRIMARY KEY,
    Name VARCHAR(50),
    CollegeID INT,
    FOREIGN KEY (CollegeID) REFERENCES College(ID)
);

-- Interview Group Table
CREATE TABLE InterviewGroup (
    ID INT PRIMARY KEY,
    GraduateSecretaryID INT,
    FOREIGN KEY (GraduateSecretaryID) REFERENCES GraduateSecretary(ID)
);

-- Discipline Secretary Table
CREATE TABLE DisciplineSecretary (
    ID INT PRIMARY KEY,
    Name VARCHAR(50),
    CollegeID INT,
    FOREIGN KEY (CollegeID) REFERENCES College(ID)
);

-- Graduate Director Table
CREATE TABLE GraduateDirector (
    ID INT PRIMARY KEY,
    Name VARCHAR(50)
);

-- Supervisor Table
CREATE TABLE Supervisor (
    ID INT PRIMARY KEY,
    Name VARCHAR(50)
);

-- Administrator Table
CREATE TABLE Administrator (
    ID INT PRIMARY KEY,
    Name VARCHAR(50)
);
