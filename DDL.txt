-- Database dcdb
--学科负责人
CREATE TABLE DisciplineHead (
    id INT NOT NULL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    college_id INT NOT NULL,
    graduate_management_secretary_id INT NOT NULL,
    FOREIGN KEY (college_id) REFERENCES College(id),
    FOREIGN KEY (graduate_management_secretary_id) REFERENCES GraduateManagementSecretary(id)
);

--学院
CREATE TABLE College (
    id INT NOT NULL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    website VARCHAR(100) NOT NULL
);

--学院秘书
CREATE TABLE DisciplineSecretary (
    id INT NOT NULL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    college_id INT NOT NULL,
    FOREIGN KEY (college_id) REFERENCES College(id)
);

--研究生管理秘书
CREATE TABLE GraduateManagementSecretary (
    id INT NOT NULL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    college_id INT NOT NULL,
    FOREIGN KEY (college_id) REFERENCES College(id)
);

--复试组
CREATE TABLE InterviewGroup (
    id INT NOT NULL PRIMARY KEY,
    graduate_management_secretary_id INT NOT NULL,
    FOREIGN KEY (graduate_management_secretary_id) REFERENCES GraduateManagementSecretary(id)
);

--学科
CREATE TABLE Discipline (
    id INT NOT NULL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    type VARCHAR(50) NOT NULL,
    quota INT NOT NULL,
    overview TEXT NOT NULL,
    parent_discipline INT NOT NULL,
    level INT NOT NULL,
    college_id INT,
    FOREIGN KEY (college_id) REFERENCES College(id)
);

--科目
CREATE TABLE Subject (
    id INT NOT NULL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    type VARCHAR(50) NOT NULL
);

--导师
CREATE TABLE Teacher (
    id INT NOT NULL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    qualification VARCHAR(50) NOT NULL,
    image VARCHAR(255),
    email VARCHAR(50) NOT NULL,
    title VARCHAR(50) NOT NULL,
    profile TEXT NOT NULL,
    academic_quota INT NOT NULL,
    professional_quota INT NOT NULL,
    direct_phd_quota INT NOT NULL,
    volunteer_round INT NOT NULL,
    discipline_head_id INT NOT NULL,
    college_id INT NOT NULL,
    FOREIGN KEY (discipline_head_id) REFERENCES DisciplineSecretary(id),
    FOREIGN KEY (college_id) REFERENCES College(id)
);

--考生
CREATE TABLE Student (
    id INT NOT NULL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    emergency_phone VARCHAR(20) NOT NULL,
    email VARCHAR(50) NOT NULL,
    undergraduate_major VARCHAR(100) NOT NULL,
    undergraduate_school VARCHAR(100) NOT NULL,
    origin VARCHAR(100) NOT NULL,
    undergraduate_type VARCHAR(50) NOT NULL,
    resume VARCHAR(255),
    birth_date DATE NOT NULL,
    graduation_date DATE NOT NULL,
    exam_ticket_number VARCHAR(50) NOT NULL,
    id_card_number VARCHAR(50) NOT NULL,
    category VARCHAR(50) NOT NULL,
    volunteer_status VARCHAR(50) NOT NULL,
    graduate_type VARCHAR(50) NOT NULL,
    graduate_management_secretary_id INT NOT NULL,
    interview_group_id INT NOT NULL,
    discipline_id INT NOT NULL,
    FOREIGN KEY (graduate_management_secretary_id) REFERENCES GraduateManagementSecretary(id),
    FOREIGN KEY (interview_group_id) REFERENCES InterviewGroup(id),
    FOREIGN KEY (discipline_id) REFERENCES Discipline(id)
);

--选择
CREATE TABLE Choice (
    teacher_id INT NOT NULL,
    student_id INT NOT NULL,
    priority INT NOT NULL,
    PRIMARY KEY (teacher_id, student_id),
    FOREIGN KEY (teacher_id) REFERENCES Teacher(id),
    FOREIGN KEY (student_id) REFERENCES Student(id)
);

--报考
CREATE TABLE Application (
    student_id INT NOT NULL,
    discipline_id INT NOT NULL,
    preference_order INT NOT NULL,
    PRIMARY KEY (student_id, discipline_id),
    FOREIGN KEY (student_id) REFERENCES Student(id),
    FOREIGN KEY (discipline_id) REFERENCES Discipline(id)
);

--考试
CREATE TABLE Exam (
    subject_id INT NOT NULL,
    student_id INT NOT NULL,
    type VARCHAR(50) NOT NULL,
    score FLOAT NOT NULL,
    time DATETIME NOT NULL,
    location VARCHAR(255) NOT NULL,
    comment TEXT NOT NULL,
    signature VARCHAR(255), 
    PRIMARY KEY (subject_id, student_id),
    FOREIGN KEY (subject_id) REFERENCES Subject(id),
    FOREIGN KEY (student_id) REFERENCES Student(id)
);

--考核
CREATE TABLE Assessment (
    subject_id INT NOT NULL,
    discipline_id INT NOT NULL,
    type VARCHAR(50) NOT NULL,
    PRIMARY KEY (subject_id, discipline_id),
    FOREIGN KEY (subject_id) REFERENCES Subject(id),
    FOREIGN KEY (discipline_id) REFERENCES Discipline(id)
);

--教学
CREATE TABLE Teaching (
    discipline_id INT NOT NULL,
    teacher_id INT NOT NULL,
    PRIMARY KEY (discipline_id, teacher_id),
    FOREIGN KEY (discipline_id) REFERENCES Discipline(id),
    FOREIGN KEY (teacher_id) REFERENCES Teacher(id)
);

--研究生主管领导
CREATE TABLE GraduateManager (
    id INT NOT NULL PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

--监督人员
CREATE TABLE Supervisor (
    id INT NOT NULL PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

--管理员
CREATE TABLE Administrator (
    id INT NOT NULL PRIMARY KEY,
    name VARCHAR(50) NOT NULL
);

--用户
CREATE TABLE User (
    id INT NOT NULL PRIMARY KEY,
    user_name VARCHAR(50) NOT NULL,
    password VARCHAR(100) NOT NULL,
    user_identity ENUM NOT NULL
);

